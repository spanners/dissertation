diff --git a/resources/misc/editor.css b/resources/misc/editor.css
index 53f2288..6cc7463 100644
--- a/resources/misc/editor.css
+++ b/resources/misc/editor.css
@@ -14,11 +14,18 @@ a:hover {text-decoration: underline; color: rgb(234,21,122);}
 .zoom-150 { font-size: 150%; }
 .zoom-200 { font-size: 200%; }
 
+#elm-moose {
+    width:  400px;
+    height: 400px;
+    background-color: white;
+    border: 1px solid #babdb6;
+}
+
 #editor_box {
     position: absolute;
     left: 0;
     right: 0;
-    top: 0;
+    top: 50;
 }
 
 #always_on { padding: 5px 0; }
diff --git a/server/Editor.hs b/server/Editor.hs
index 4ea4894..da3cfbd 100644
--- a/server/Editor.hs
+++ b/server/Editor.hs
@@ -8,6 +8,12 @@ import qualified Text.Blaze.Html5.Attributes as A
 import Network.HTTP.Base (urlEncode)
 import qualified System.FilePath as FP
 
+import qualified Elm.Internal.Utils as Elm
+import Data.Maybe (fromMaybe)
+
+import Generate (addSpaces)
+
+
 -- | Display an editor and the compiled result side-by-side.
 ide :: String -> FilePath -> String -> Html
 ide cols fileName code =
@@ -51,6 +57,7 @@ editor filePath code =
         H.script ! A.type_ "text/javascript" ! A.src "/misc/showdown.js" $ mempty
         H.script ! A.type_ "text/javascript" ! A.src "/misc/editor.js?0.11" $ mempty
       H.body $ do
+        H.div ! A.id "elm-moose" $ ""
         H.form ! A.id "inputForm" ! A.action "/compile" ! A.method "post" ! A.target "output" $ do
            H.div ! A.id "editor_box" $
              H.textarea ! A.name "input" ! A.id "input" $ toHtml ('\n':code)
@@ -59,6 +66,17 @@ editor filePath code =
              bar "editor_options" editorOptions
              bar "always_on" (buttons >> options)
         H.script ! A.type_ "text/javascript" $ "initEditor();"
+        let js = H.script ! A.type_ "text/javascript"
+            elmname = "Elm." ++ fromMaybe "Main" (Elm.moduleName src)
+        js ! A.src (H.toValue ("/elm-runtime.js?0.11" :: String)) $ ""
+        case Elm.compile src of
+          Right jsSrc -> do
+              js $ preEscapedToMarkup jsSrc
+          Left err ->
+              H.span ! A.style "font-family: monospace;" $
+              mapM_ (\line -> preEscapedToMarkup (addSpaces line) >> H.br) (lines err)
+        H.script ! A.type_ "text/javascript" $ "var div = document.getElementById('elm-moose'); var moose = Elm.embed(Elm.Moose, div, {});"
+  where src = "module Moose where\nimport Mouse\nmain = lift asText Mouse.position"
 
 bar :: AttributeValue -> Html -> Html
 bar id' body = H.div ! A.id id' ! A.class_ "option" $ body
@@ -66,7 +84,7 @@ bar id' body = H.div ! A.id id' ! A.class_ "option" $ body
 buttons :: Html
 buttons = H.div ! A.class_ "valign_kids"
                 ! A.style "float:right; padding-right: 6px;"
-                $ "Auto-update:" >> autoBox >> hotSwapButton >> compileButton
+                $ autoBox >> hotSwapButton >> compileButton
       where
         hotSwapButton = 
             H.input
@@ -80,36 +98,35 @@ buttons = H.div ! A.class_ "valign_kids"
             H.input
                  ! A.type_ "button"
                  ! A.id "compile_button"
-                 ! A.value "Compile"
+                 ! A.value "Compile (Ctrl-Enter)"
                  ! A.onclick "compile()"
                  ! A.title "Ctrl-Enter: change program behavior but keep the state"
 
         autoBox =
-            H.input
-                 ! A.type_ "checkbox"
-                 ! A.id "auto_hot_swap_checkbox"
-                 ! A.onchange "setAutoHotSwap(this.checked)"
-                 ! A.style "margin-right:20px;"
-                 ! A.title "attempt to hot-swap automatically"
+            H.span ! A.title "Attempt to hot-swap automatically." $ "Auto-update:" >>  
+                H.input ! A.type_ "checkbox"
+                        ! A.id "auto_hot_swap_checkbox"
+                        ! A.onchange "setAutoHotSwap(this.checked)"
+                        ! A.style "margin-right:20px;"
 
 
 options :: Html
 options = H.div ! A.class_ "valign_kids"
                 ! A.style "float:left; padding-left:6px; padding-top:2px;"
-                ! A.title "Show documentation and types."
                 $ (docs' >> opts)
     where 
-      docs' = do
-        H.span "Hints:"
-        H.input ! A.type_ "checkbox"
-                ! A.id "show_type_checkbox"
-                ! A.onchange "showType(this.checked);"
-
-      opts = do
-        H.span ! A.style "padding-left: 12px;" $ "Options:"
-        H.input ! A.type_ "checkbox"
-                ! A.id "options_checkbox" 
-                ! A.onchange "showOptions(this.checked);"
+      docs' = 
+        H.span  ! A.title "Show documentation and types." $ "Hints:" >>
+            H.input ! A.type_ "checkbox"
+                    ! A.id "show_type_checkbox"
+                    ! A.onchange "showType(this.checked);"
+
+      opts = 
+        H.span  ! A.title "Show editor options." 
+                ! A.style "padding-left: 12px;" $ "Options:" >>
+            H.input ! A.type_ "checkbox"
+                    ! A.id "options_checkbox" 
+                    ! A.onchange "showOptions(this.checked);"
 
 editorOptions :: Html
 editorOptions = theme >> zoom >> lineNumbers
diff --git a/server/Generate.hs b/server/Generate.hs
index b57a401..4fed3a6 100644
--- a/server/Generate.hs
+++ b/server/Generate.hs
@@ -1,5 +1,5 @@
 {-# LANGUAGE OverloadedStrings #-}
-module Generate (html, js) where
+module Generate (html, js, addSpaces) where
 
 import Data.Maybe (fromMaybe)
 import Text.Blaze (preEscapedToMarkup)
